{"version":3,"sources":["logo.svg","Editor/DescriptorEditor.js","Editor/Preview.js","Editor/utils.js","Editor/index.js","PreviewPage.js","App.js","index.js","registerServiceWorker.js","remote-component.config.js"],"names":["DescritptorEditor","value","onChange","id","attributes","isGlobal","console","log","className","for","type","placeholder","e","target","Object","entries","map","attributeInfo","index","attributeKey","attributeSettings","label","onClick","Preview","React","memo","url","useReducer","x","reloaded","reload","iframeSrc","useMemo","encodeURIComponent","style","height","width","src","postData","a","data","fetch","method","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","saveCode","cloudBuildService","accountId","componentId","sourceCode","build","list","then","res","defaultOptions","acceptSuggestionOnCommitCharacter","acceptSuggestionOnEnter","accessibilitySupport","autoIndent","automaticLayout","codeLens","colorDecorators","contextmenu","cursorBlinking","cursorSmoothCaretAnimation","cursorStyle","disableLayerHinting","disableMonospaceOptimizations","dragAndDrop","fixedOverflowWidgets","folding","foldingStrategy","fontLigatures","formatOnPaste","formatOnType","hideCursorInOverviewRuler","highlightActiveIndentGuide","links","mouseWheelZoom","multiCursorMergeOverlapping","multiCursorModifier","overviewRulerBorder","overviewRulerLanes","quickSuggestions","quickSuggestionsDelay","readOnly","renderControlCharacters","renderFinalNewline","renderIndentGuides","renderLineHighlight","renderWhitespace","revealHorizontalRightPadding","roundedSelection","rulers","scrollBeyondLastColumn","scrollBeyondLastLine","selectOnLineNumbers","selectionClipboard","selectionHighlight","showFoldingControls","smoothScrolling","suggestOnTriggerCharacters","wordBasedSuggestions","wordSeparators","wordWrap","wordWrapBreakAfterCharacters","wordWrapBreakBeforeCharacters","wordWrapBreakObtrusiveCharacters","wordWrapColumn","wordWrapMinified","wrappingIndent","theme","search","URLSearchParams","window","location","componentIdFromUrl","get","sourceFile","CodeEditor","useState","setSourceCode","setComponentId","updatedDescriptor","setUpdatedDescriptor","componentList","useQuery","componentInfo","find","c","saveMutation","useMutation","buildMutation","useEffect","descriptor","fileUrl","sourceUrl","text","code","error","component","href","updateValue","mutate","isLoading","defaultLanguage","defaultValue","compiledUrl","requires","createRequires","resolve","RemoteComponent","createRemoteComponent","PreviewPage","useLocation","componentUrl","propsStrinfg","setPropsString","props","s","parse","safeJsonParse","language","lines","queryClient","QueryClient","App","basename","QueryClientProvider","client","path","exact","ReactDOM","render","document","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","module","exports","react","require"],"mappings":"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","file":"static/js/main.4e3d4137.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const DescritptorEditor = ({ value, onChange }) => {\n  const { id, isGlobal, attributes } = value || {};\n  console.log({ value });\n  return (\n    <>\n      <div>\n        <div className=\"\">\n          <label className=\"block text-gray-700 text-sm mb-2\" for=\"componentId\">\n            Unique Component ID\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"componentId\"\n            type=\"text\"\n            placeholder=\"\"\n            value={id}\n            onChange={(e) => {\n              onChange({\n                ...value,\n                id: e.target.value,\n              });\n            }}\n          />\n        </div>\n        <div className=\"p-2\"></div>\n        <h3>Inputs</h3>\n        {Object.entries(value?.attributes || {}).map((attributeInfo, index) => {\n          const attributeKey = attributeInfo[0];\n          const attributeSettings = attributeInfo[1];\n          return (\n            <>\n              <div className=\"grid grid-cols-2 gap-2 p-1 bg-gray-300 rounded my-2\">\n                <div>\n                  Key\n                  <input\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={attributeKey}\n                    onChange={(e) => {\n                      delete value?.attributes[attributeKey];\n                      onChange({\n                        ...value,\n                        attributes: {\n                          ...value.attributes,\n                          [e.target.value]: attributeSettings,\n                        },\n                      });\n                    }}\n                  />\n                </div>\n                <div>\n                  Label\n                  <input\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={attributeSettings.label}\n                    onChange={(e) => {\n                      onChange({\n                        ...value,\n                        attributes: {\n                          ...value.attributes,\n                          [attributeKey]: {\n                            ...attributeSettings,\n                            label: e.target.value,\n                          },\n                        },\n                      });\n                    }}\n                  />\n                </div>\n                <div>\n                  <select\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    placeholder=\"\"\n                    value={attributeSettings.type}\n                    onChange={(e) => {\n                      onChange({\n                        ...value,\n                        attributes: {\n                          ...value.attributes,\n                          [attributeKey]: {\n                            ...attributeSettings,\n                            type: e.target.value,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    <option value=\"String\">String</option>\n                    <option value=\"String\">Number</option>\n                    <option value=\"String\">Boolean</option>\n                  </select>\n                </div>\n              </div>\n            </>\n          );\n        })}\n\n        <div>\n          <button\n            className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded  m-2 `}\n            onClick={() => {\n              onChange({\n                ...value,\n                attributes: {\n                  ...attributes,\n                  [\"key\"]: {\n                    label: \"Label\",\n                    type: \"String\",\n                  },\n                },\n              });\n            }}\n          >\n            + Add Input\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useMemo, useReducer, useState } from \"react\";\n\nexport const Preview = React.memo(({ url }) => {\n  const [reloaded, reload] = useReducer((x) => x + 1, 0);\n  const iframeSrc = useMemo(() => {\n    return `/lambda-components-editor/preview?url=${encodeURIComponent(url)}`;\n  }, [reloaded, url]);\n  return (\n    <>\n      <button\n        onClick={(e) => reload()}\n        className=\"m-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded  m-2 \"\n      >\n        Reload\n      </button>\n      {url && (\n        <iframe\n          style={{ height: \"90vh\", width: \"100%\" }}\n          src={iframeSrc}\n          key={reloaded}\n        />\n      )}\n    </>\n  );\n});\n","// Example POST method implementation:\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\nexport const saveCode = async (\n  cloudBuildService,\n  accountId,\n  componentId,\n  sourceCode\n) => {\n  console.log(\n    \"saveCode\",\n    cloudBuildService,\n    accountId,\n    componentId,\n    sourceCode\n  );\n  return postData(`${cloudBuildService}/save`, {\n    accountId,\n    componentId,\n    sourceCode,\n  });\n};\n\nexport const build = async (cloudBuildService, accountId, componentId) => {\n  return postData(`${cloudBuildService}/build`, {\n    accountId,\n    componentId,\n  });\n};\n\nexport const list = async (cloudBuildService, accountId) => {\n  return fetch(`${cloudBuildService}/list?accountId=${accountId}`).then((res) =>\n    res.json()\n  );\n};\n","import Editor from \"@monaco-editor/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { DescritptorEditor } from \"./DescriptorEditor\";\nimport { Preview } from \"./Preview\";\nimport { build, list, saveCode } from \"./utils\";\n\nconst defaultOptions = {\n  acceptSuggestionOnCommitCharacter: true,\n  acceptSuggestionOnEnter: \"on\",\n  accessibilitySupport: \"auto\",\n  autoIndent: false,\n  automaticLayout: true,\n  codeLens: true,\n  colorDecorators: true,\n  contextmenu: true,\n  cursorBlinking: \"blink\",\n  cursorSmoothCaretAnimation: false,\n  cursorStyle: \"line\",\n  disableLayerHinting: false,\n  disableMonospaceOptimizations: false,\n  dragAndDrop: false,\n  fixedOverflowWidgets: false,\n  folding: true,\n  foldingStrategy: \"auto\",\n  fontLigatures: false,\n  formatOnPaste: false,\n  formatOnType: false,\n  hideCursorInOverviewRuler: false,\n  highlightActiveIndentGuide: true,\n  links: true,\n  mouseWheelZoom: false,\n  multiCursorMergeOverlapping: true,\n  multiCursorModifier: \"alt\",\n  overviewRulerBorder: true,\n  overviewRulerLanes: 2,\n  quickSuggestions: true,\n  quickSuggestionsDelay: 100,\n  readOnly: false,\n  renderControlCharacters: false,\n  renderFinalNewline: true,\n  renderIndentGuides: true,\n  renderLineHighlight: \"all\",\n  renderWhitespace: \"none\",\n  revealHorizontalRightPadding: 30,\n  roundedSelection: true,\n  rulers: [],\n  scrollBeyondLastColumn: 5,\n  scrollBeyondLastLine: true,\n  selectOnLineNumbers: true,\n  selectionClipboard: true,\n  selectionHighlight: true,\n  showFoldingControls: \"mouseover\",\n  smoothScrolling: false,\n  suggestOnTriggerCharacters: true,\n  wordBasedSuggestions: true,\n  wordSeparators: \"~!@#$%^&*()-=+[{]}|;:'\\\",.<>/?\",\n  wordWrap: \"off\",\n  wordWrapBreakAfterCharacters: \"\\t})]?|&,;\",\n  wordWrapBreakBeforeCharacters: \"{([+\",\n  wordWrapBreakObtrusiveCharacters: \".\",\n  wordWrapColumn: 80,\n  wordWrapMinified: true,\n  wrappingIndent: \"none\",\n  theme: \"vs-dark\",\n};\nconst search = new URLSearchParams(window.location.search);\nconst componentIdFromUrl = search?.get(\"componentId\");\nconst accountId = search?.get(\"accountId\");\nconst sourceFile = search?.get(\"sourceFile\");\nconst cloudBuildService = search?.get(\"cloudBuildService\");\n\nexport const CodeEditor = () => {\n  const [sourceCode, setSourceCode] = useState(\"\");\n  const [componentId, setComponentId] = useState(componentIdFromUrl);\n  const [updatedDescriptor, setUpdatedDescriptor] = useState({});\n\n  // Queries\n  const { data: componentList } = useQuery(\"componentList\", () => {\n    return list(cloudBuildService, accountId);\n  });\n\n  const componentInfo = useMemo(() => {\n    return componentList?.find((c) => c.componentId === componentId) || {};\n  }, [componentList]);\n  //   // Mutations\n  const saveMutation = useMutation(async () => {\n    return saveCode(cloudBuildService, accountId, componentId, sourceCode);\n  });\n  const buildMutation = useMutation(async () => {\n    return build(cloudBuildService, accountId, componentId);\n  });\n\n  console.log(saveMutation);\n  useEffect(async () => {\n    try {\n      setUpdatedDescriptor(componentInfo?.descriptor || {});\n      const fileUrl = sourceFile || componentInfo.sourceUrl;\n      console.log({ componentList, fileUrl });\n      const code = await fetch(fileUrl).then((response) => response.text());\n      setSourceCode(code);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [componentInfo]);\n\n  return (\n    <>\n      <div className=\"p-4  items-center\">\n        <div className=\"text-center w-full\">\n          <h2 className=\"text-lg\">{\"⚒️ 🧰 ⚒️ Lambda componet editor\"}</h2>\n          <p className=\"text-sm\">\n            Code react component online in browser from anywhere, build and\n            store on cloud and consume in your storefront.\n          </p>\n          <p>\n            All Components:{\" \"}\n            {componentList?.map((component) => {\n              return (\n                <>\n                  <a\n                    className=\"text-blue-700 font-bold\"\n                    href={`?accountId=${accountId}&cloudBuildService=${cloudBuildService}&componentId=${component.componentId}`}\n                  >\n                    {component.componentId}\n                  </a>\n                </>\n              );\n            })}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-layout\">\n        <div className=\"\">\n          <div className=\"p-2\">\n            <DescritptorEditor\n              value={updatedDescriptor}\n              onChange={(updateValue) => {\n                setUpdatedDescriptor(updateValue);\n                setComponentId(updateValue.id);\n              }}\n            />\n          </div>\n\n          <div>\n            <button\n              className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded  m-2 `}\n              onClick={() => saveMutation.mutate({})}\n            >\n              {saveMutation.isLoading ? \"Saving...\" : \"Save\"}\n            </button>\n            <button\n              className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded  m-2`}\n              onClick={() => buildMutation.mutate({})}\n            >\n              {buildMutation.isLoading ? \"Building...\" : \"Build\"}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"rounded-lg overflow-hidden\">\n          <Editor\n            height=\"90vh\"\n            defaultLanguage=\"javascript\"\n            defaultValue={`\nimport React from \"react\";\n\nconst defaultProps = {\n  title: 'Hello',\n  description: 'World'\n}\nconst RemoteComponent = ({\n  title,\n  description\n} = defaultProps) => {\n  return (\n    <>\n      😎 \n      <h1>{title}</h1>\n      <p>{description}</p>\n    </>\n  )\n}\n\nexport default RemoteComponent;   \n      `}\n            value={sourceCode}\n            onChange={(value) => setSourceCode(value)}\n            {...defaultOptions}\n          />\n        </div>\n        <div>\n          <h3>Preview</h3>\n\n          {componentInfo ? <Preview url={componentInfo?.compiledUrl} /> : \"...\"}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  createRemoteComponent,\n  createRequires,\n} from \"@paciolan/remote-component\";\nimport React, { useMemo, useReducer, useState } from \"react\";\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { resolve } from \"./remote-component.config.js\";\n\nconst requires = createRequires(resolve);\n\nexport const RemoteComponent = createRemoteComponent({ requires });\n\nconst safeJsonParse = (s) => {\n  try {\n    return JSON.parse(s);\n  } catch (e) {\n    return undefined;\n  }\n};\nexport const PreviewPage = React.memo(() => {\n  const location = useLocation();\n  const componentUrl = new URLSearchParams(location.search).get(\"url\");\n  const [propsStrinfg, setPropsString] = useState(\"\");\n  const [forceUpdated, forceUpdate] = useReducer((x) => x + 1, 0);\n  const props = useMemo(() => {\n    return safeJsonParse(propsStrinfg);\n  }, [propsStrinfg]);\n  console.log({ props });\n  return (\n    <>\n      <div className={\"shadow rounded m-4\"}>\n        <RemoteComponent url={componentUrl} {...(props || {})} />\n      </div>\n      <div className=\"m-2 text-center\">\n        <h5>Test Props</h5>\n\n        <textarea\n          value={propsStrinfg}\n          onChange={(e) => setPropsString(e.target.value)}\n          language=\"json\"\n          lines=\"6\"\n          style={{ height: \"175px\" }}\n          className=\"w-full shadow\"\n        ></textarea>\n        {propsStrinfg && !props && (\n          <>\n            <label>Note: make sure JSON is correct</label>\n            <br />\n          </>\n        )}\n        {/* <button\n          onClick={(e) => {\n            forceUpdate();\n          }}\n          className=\"m-auto bg-blue-500 hover:bg-blue-700 text-white py-1 px-2 text-sm rounded  m-1 \"\n        >\n          Apply\n        </button> */}\n      </div>\n    </>\n  );\n});\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./styles/output.css\";\nimport { CodeEditor } from \"./Editor\";\nimport { useState } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { PreviewPage } from \"./PreviewPage\";\n// Create a client\nconst queryClient = new QueryClient();\nconst App = () => {\n  return (\n    <Router basename=\"/lambda-components-editor\">\n      <QueryClientProvider client={queryClient}>\n        <Route path=\"/\" exact>\n          <div className=\"App \">\n            <CodeEditor></CodeEditor>\n          </div>\n        </Route>\n        <Route path=\"/preview\" exact>\n          <PreviewPage />\n        </Route>\n      </QueryClientProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","module.exports = {\n  resolve: {\n    react: require('react'),\n  },\n}\n"],"sourceRoot":""}